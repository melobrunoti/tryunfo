{"version":3,"sources":["components/Form.js","components/Card.js","components/Filters.js","App.js","index.js"],"names":["Form","this","props","cardName","cardDescription","cardAttr1","cardAttr2","cardAttr3","hasTrunfo","cardImage","cardRare","cardTrunfo","isSaveButtonDisabled","onInputChange","onSaveButtonClick","htmlFor","value","type","name","id","onChange","checked","onClick","disabled","React","Component","Card","isTrunfo","className","src","Filters","filterByName","filterByRarity","filterTrunfo","trunfoFilter","placeholder","App","state","deck","savedCard","setState","checkButton","result","length","Number","target","filter","rarityFilter","card","myDeck","c","alt","map","delete","bind","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e974877.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Form extends React.Component {\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      hasTrunfo,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      isSaveButtonDisabled,\n      onInputChange,\n      onSaveButtonClick } = this.props;\n\n    return (\n      <div>\n        <form>\n          <h1>Adicionar Nova Carta</h1>\n          <label htmlFor=\"cardName\">\n            Nome\n            <input\n              value={ cardName }\n              type=\"text\"\n              name=\"cardName\"\n              data-testid=\"name-input\"\n              id=\"cardName\"\n              onChange={ onInputChange }\n            />\n          </label>\n\n          <label htmlFor=\"cardDescription\">\n            Descricao\n            <textarea\n              value={ cardDescription }\n              type=\"text\"\n              name=\"cardDescription\"\n              data-testid=\"description-input\"\n              id=\"cardDescription\"\n              onChange={ onInputChange }\n            />\n          </label>\n\n          <label htmlFor=\"cardAttr1\">\n            Atack Damage\n            <input\n              value={ cardAttr1 }\n              type=\"number\"\n              name=\"cardAttr1\"\n              data-testid=\"attr1-input\"\n              id=\"cardAttr1\"\n              onChange={ onInputChange }\n            />\n          </label>\n\n          <label htmlFor=\"cardAttr2\">\n            Health Power\n            <input\n              value={ cardAttr2 }\n              type=\"number\"\n              name=\"cardAttr2\"\n              data-testid=\"attr2-input\"\n              id=\"cardAttr2\"\n              onChange={ onInputChange }\n            />\n          </label>\n\n          <label htmlFor=\"cardAttr3\">\n            Mana  Power\n            <input\n              value={ cardAttr3 }\n              type=\"number\"\n              name=\"cardAttr3\"\n              data-testid=\"attr3-input\"\n              id=\"cardAttr3\"\n              onChange={ onInputChange }\n            />\n          </label>\n\n          <label htmlFor=\"image-input\">\n            image\n            <input\n              value={ cardImage }\n              type=\"text\"\n              name=\"cardImage\"\n              data-testid=\"image-input\"\n              id=\"cardImage\"\n              onChange={ onInputChange }\n            />\n          </label>\n\n          <label htmlFor=\"cardTrunfo\">\n            Raridade\n            <select\n              value={ cardRare }\n              data-testid=\"rare-input\"\n              name=\"cardRare\"\n              id=\"cardTrunfo\"\n              onChange={ onInputChange }\n            >\n\n              <option value=\"Normal\">Normal</option>\n              <option value=\"Raro\">Raro</option>\n              <option value=\"Muito raro\">Muito raro</option>\n\n            </select>\n          </label>\n          <div>\n            {hasTrunfo ? (<p>Você já tem um Super Trunfo em seu baralho</p>)\n              : (\n                <label htmlFor=\"cardTrunfo\">\n                  Super Trunfo?\n                  <input\n                    type=\"checkbox\"\n                    name=\"cardTrunfo\"\n                    data-testid=\"trunfo-input\"\n                    id=\"cardTrunfo\"\n                    onChange={ onInputChange }\n                    checked={ cardTrunfo }\n                  />\n                </label>\n              )}\n          </div>\n          <button\n            type=\"button\"\n            data-testid=\"save-button\"\n            onClick={ onSaveButtonClick }\n            disabled={ isSaveButtonDisabled }\n          >\n            Salvar\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nForm.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  cardAttr1: PropTypes.string.isRequired,\n  cardAttr2: PropTypes.string.isRequired,\n  cardAttr3: PropTypes.string.isRequired,\n  cardImage: PropTypes.string.isRequired,\n  cardRare: PropTypes.string.isRequired,\n  cardTrunfo: PropTypes.bool.isRequired,\n  hasTrunfo: PropTypes.bool.isRequired,\n  isSaveButtonDisabled: PropTypes.bool.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSaveButtonClick: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Card extends React.Component {\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo } = this.props;\n\n    let isTrunfo;\n    if (cardTrunfo) {\n      isTrunfo = (\n        <span className=\"trunfo-card\" data-testid=\"trunfo-card\">\n          Super Trunfo\n        </span>);\n    }\n\n    return (\n      <div className={ cardTrunfo === false ? 'card' : 'especial-card' }>\n        <div className=\"card-background\">\n          <div className=\"card-frame\">\n            <h3 className=\"default-card-name\" data-testid=\"name-card\">{ cardName }</h3>\n            <div className=\"img-container\">\n              <img\n                className=\"default-card-image\"\n                data-testid=\"image-card\"\n                src={ cardImage }\n                /*  alt={ cardName } */\n              />\n            </div>\n            <div className=\"card-description\">\n              <p className=\"desc-box\" data-testid=\"description-card\">{cardDescription}</p>\n            </div>\n\n            <span id=\"att1\" className=\"default-card-att\" data-testid=\"attr1-card\">\n              Atk:\n              {cardAttr1}\n            </span>\n            <span className=\"default-card-att\" data-testid=\"attr2-card\">\n              Hp:\n              {cardAttr2}\n            </span>\n            <span className=\"default-card-att\" data-testid=\"attr3-card\">\n              Mp:\n              {cardAttr3}\n            </span>\n            <span\n              className=\"default-card-rarity\"\n              data-testid=\"rare-card\"\n            >\n              {cardRare}\n            </span>\n\n            <span>{isTrunfo}</span>\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nCard.propTypes = {\n  cardName: PropTypes.string.isRequired,\n  cardDescription: PropTypes.string.isRequired,\n  cardAttr1: PropTypes.string.isRequired,\n  cardAttr2: PropTypes.string.isRequired,\n  cardAttr3: PropTypes.string.isRequired,\n  cardImage: PropTypes.string.isRequired,\n  cardRare: PropTypes.string.isRequired,\n  cardTrunfo: PropTypes.bool.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Filters extends React.Component {\n  render() {\n    const { filterByName, filterByRarity, filterTrunfo, trunfoFilter } = this.props;\n    return (\n      <>\n        <div>\n          <label className=\"trunfo-box\" htmlFor=\"trunfo-filter\">\n            Super Trunfo ?\n            <input\n              className=\"trunfo-box\"\n              type=\"checkbox\"\n              id=\"trunfo-filter\"\n              data-testid=\"trunfo-filter\"\n              onChange={ filterTrunfo }\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"search-filter\">\n            <input\n              placeholder=\"Pesquise sua carta\"\n              className=\"search-input\"\n              type=\"text\"\n              data-testid=\"name-filter\"\n              id=\"search-filter\"\n              onChange={ filterByName }\n              disabled={ trunfoFilter }\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"filter-rarity\">\n            <select\n              className=\"rarity-select\"\n              id=\"filter-rarity\"\n              onChange={ filterByRarity }\n              data-testid=\"rare-filter\"\n              disabled={ trunfoFilter }\n            >\n              <option>Todas</option>\n              <option>Normal</option>\n              <option>Raro</option>\n              <option>Muito raro</option>\n            </select>\n          </label>\n        </div>\n      </>\n\n    );\n  }\n}\nexport default Filters;\n\nFilters.propTypes = {\n  filterByName: PropTypes.func.isRequired,\n  filterByRarity: PropTypes.func.isRequired,\n  filterTrunfo: PropTypes.func.isRequired,\n  trunfoFilter: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport Filters from './components/Filters';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '',\n      cardAttr2: '',\n      cardAttr3: '',\n      cardImage: '',\n      cardRare: 'Normal',\n      cardTrunfo: false,\n      hasTrunfo: false,\n      isSaveButtonDisabled: true,\n      deck: [],\n      filter: '',\n      rarityFilter: 'Todas',\n      trunfoFilter: false,\n\n    };\n  }\n\n  onSaveButtonClick= () => {\n    const {\n      deck,\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n    } = this.state;\n\n    const savedCard = {\n      deck,\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n    };\n\n    this.setState(() => ({\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n      hasTrunfo: cardTrunfo === true,\n      deck: [...deck, savedCard],\n    }));\n\n    if (cardTrunfo) {\n      this.setState({ hasTrunfo: true });\n    }\n  }\n\n  checkButton = () => {\n    const\n      {\n        cardName,\n        cardDescription,\n        cardImage,\n        cardAttr1,\n        cardAttr2,\n        cardAttr3,\n      } = this.state;\n\n    let result = false;\n\n    if (\n      cardName.length === 0\n      || cardDescription.length === 0\n      || cardImage.length === 0\n    ) {\n      result = true;\n    }\n\n    const total = 210;\n    if (Number(cardAttr1) + Number(cardAttr2) + Number(cardAttr3) > total) {\n      result = true;\n    }\n\n    const max = 90;\n    if (Number(cardAttr1) > max\n        || Number(cardAttr2) > max\n        || Number(cardAttr3) > max) {\n      result = true;\n    }\n\n    if (Number(cardAttr1) < 0\n        || Number(cardAttr2 < 0)\n        || Number(cardAttr3 < 0)) {\n      result = true;\n    }\n\n    this.setState({ isSaveButtonDisabled: result });\n  }\n\n  onInputChange = ({ target }) => {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.setState(() => ({ [name]: value }), () => {\n      this.checkButton();\n    });\n  }\n\n  filterByName = ({ target }) => this.setState({ filter: target.value });\n\n  filterByRarity = ({ target }) => this.setState({ rarityFilter: target.value });\n\n  filterTrunfo= ({ target }) => this.setState({ trunfoFilter: target.checked });\n\n  // ref (https://newbedev.com/javascript-how-to-add-delete-button-in-react-js-code-example)\n  delete(card) {\n    const { deck } = this.state;\n    const myDeck = deck.filter((c) => c.cardName !== card.cardName);\n    this.setState({ deck: myDeck });\n    const trunfo = myDeck.filter((c) => c.cardTrunfo);\n    if (trunfo) this.setState({ hasTrunfo: false });\n  }\n\n  render() {\n    const { deck, filter, rarityFilter, trunfoFilter } = this.state;\n    return (\n      <main>\n        <header>\n          <img className=\"logo\" src=\"dofus.png\" alt=\"logo\" />\n        </header>\n        <div className=\"container\">\n          <Form\n            { ... this.state }\n            onSaveButtonClick={ this.onSaveButtonClick }\n            onInputChange={ this.onInputChange }\n          />\n        </div>\n\n        <div className=\"card-model\">\n\n          <Card\n            { ... this.state }\n          />\n        </div>\n        <div className=\"filters\">\n          <Filters\n            filterByName={ this.filterByName }\n            filterByRarity={ this.filterByRarity }\n            filterTrunfo={ this.filterTrunfo }\n          />\n        </div>\n\n        <div className=\"deck\">\n          {\n\n            trunfoFilter ? deck.filter((card) => card.cardTrunfo)\n              .map((card) => (\n                <div className=\"card-container\" key={ card.cardName }>\n                  <Card\n                    { ... card }\n                  />\n                  <button\n                    type=\"button\"\n                    data-testid=\"delete-button\"\n                    onClick={ this.delete.bind(this, card) }\n                  >\n                    excluir\n                  </button>\n                </div>\n              ))\n\n              : deck.filter((card) => card.cardName.includes(filter))\n                .filter((card) => {\n                  if (rarityFilter === 'Normal') {\n                    return card.cardRare === 'Normal';\n                  }\n                  if (rarityFilter === 'Raro') {\n                    return card.cardRare === 'Raro';\n                  }\n                  if (rarityFilter === 'Muito raro') {\n                    return card.cardRare === 'Muito raro';\n                  }\n                  return card;\n                }).map((card) => (\n                  <div className=\"card-container\" key={ card.cardName }>\n                    <Card\n                      { ... card }\n                    />\n                    <button\n                      className=\"delete-button\"\n                      type=\"button\"\n                      data-testid=\"delete-button\"\n                      onClick={ this.delete.bind(this, card) }\n                    >\n                      exluir\n                    </button>\n                  </div>))\n\n          }\n\n        </div>\n      </main>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}