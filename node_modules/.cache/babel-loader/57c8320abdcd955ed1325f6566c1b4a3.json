{"ast":null,"code":"var _jsxFileName = \"/home/bruno/projects/sd-016-b-project-tryunfo/src/App.js\";\nimport React from 'react';\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.onSaveButtonClick = () => {\n      const {\n        deck,\n        cardName,\n        cardDescription,\n        cardAttr1,\n        cardAttr2,\n        cardAttr3,\n        cardImage,\n        cardRare,\n        cardTrunfo\n      } = this.state;\n      const savedCard = {\n        cardName,\n        cardDescription,\n        cardAttr1,\n        cardAttr2,\n        cardAttr3,\n        cardImage,\n        cardRare,\n        cardTrunfo\n      };\n      this.setState(() => ({\n        deck: [...deck, savedCard],\n        cardName: '',\n        cardDescription: '',\n        cardAttr1: '0',\n        cardAttr2: '0',\n        cardAttr3: '0',\n        cardImage: '',\n        cardRare: 'normal'\n        /*     hasTrunfo: false, */\n\n      }));\n    };\n\n    this.checkButton = () => {\n      const {\n        cardName,\n        cardDescription,\n        cardImage,\n        cardAttr1,\n        cardAttr2,\n        cardAttr3\n      } = this.state;\n      let result = false;\n\n      if (cardName.length === 0 || cardDescription.length === 0 || cardImage.length === 0) {\n        result = true;\n      }\n\n      const total = 210;\n\n      if (Number(cardAttr1) + Number(cardAttr2) + Number(cardAttr3) > total) {\n        result = true;\n      }\n\n      const max = 90;\n\n      if (Number(cardAttr1) > max || Number(cardAttr2) > max || Number(cardAttr3) > max) {\n        result = true;\n      }\n\n      if (Number(cardAttr1) < 0 || Number(cardAttr2 < 0) || Number(cardAttr3 < 0)) {\n        result = true;\n      }\n\n      this.setState({\n        isSaveButtonDisabled: result\n      });\n    };\n\n    this.onInputChange = ({\n      target\n    }) => {\n      const {\n        name\n      } = target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState(() => ({\n        [name]: value\n      }), () => {\n        this.checkButton();\n      });\n    };\n\n    this.state = {\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '',\n      cardAttr2: '',\n      cardAttr3: '',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n\n      /*     hasTrunfo: false, */\n      isSaveButtonDisabled: true,\n      deck: []\n    };\n  }\n\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n\n      /*     hasTrunfo, */\n      isSaveButtonDisabled,\n      onSaveButtonClick\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tryunfo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        cardName: cardName,\n        cardDescription: cardDescription,\n        cardAttr1: cardAttr1,\n        cardAttr2: cardAttr2,\n        cardAttr3: cardAttr3,\n        cardImage: cardImage,\n        cardRare: cardRare,\n        cardTrunfo: cardTrunfo\n        /*  hasTrunfo={ hasTrunfo } */\n        ,\n        isSaveButtonDisabled: isSaveButtonDisabled,\n        onSaveButtonClick: this.onSaveButtonClick,\n        onInputChange: this.onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          cardName: cardName,\n          cardDescription: cardDescription,\n          cardAttr1: cardAttr1,\n          cardAttr2: cardAttr2,\n          cardAttr3: cardAttr3,\n          cardImage: cardImage,\n          cardRare: cardRare,\n          cardTrunfo: cardTrunfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bruno/projects/sd-016-b-project-tryunfo/src/App.js"],"names":["React","Form","Card","App","Component","constructor","onSaveButtonClick","deck","cardName","cardDescription","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","cardTrunfo","state","savedCard","setState","checkButton","result","length","total","Number","max","isSaveButtonDisabled","onInputChange","target","name","value","type","checked","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from './components/Form';\nimport Card from './components/Card';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '',\n      cardAttr2: '',\n      cardAttr3: '',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n      /*     hasTrunfo: false, */\n      isSaveButtonDisabled: true,\n      deck: [],\n\n    };\n  }\n\n  onSaveButtonClick= () => {\n    const {\n      deck,\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n    } = this.state;\n\n    const savedCard = {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n    };\n\n    this.setState(() => ({\n      deck: [...deck, savedCard],\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardImage: '',\n      cardRare: 'normal',\n      /*     hasTrunfo: false, */\n    }));\n  }\n\n  checkButton = () => {\n    const\n      {\n        cardName,\n        cardDescription,\n        cardImage,\n        cardAttr1,\n        cardAttr2,\n        cardAttr3,\n      } = this.state;\n\n    let result = false;\n\n    if (\n      cardName.length === 0\n      || cardDescription.length === 0\n      || cardImage.length === 0\n    ) {\n      result = true;\n    }\n\n    const total = 210;\n    if (Number(cardAttr1) + Number(cardAttr2) + Number(cardAttr3) > total) {\n      result = true;\n    }\n\n    const max = 90;\n    if (Number(cardAttr1) > max\n        || Number(cardAttr2) > max\n        || Number(cardAttr3) > max) {\n      result = true;\n    }\n\n    if (Number(cardAttr1) < 0\n        || Number(cardAttr2 < 0)\n        || Number(cardAttr3 < 0)) {\n      result = true;\n    }\n\n    this.setState({ isSaveButtonDisabled: result });\n  }\n\n  onInputChange = ({ target }) => {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.setState(() => ({\n      [name]: value }), () => {\n      this.checkButton();\n    });\n  }\n\n  render() {\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      /*     hasTrunfo, */\n      isSaveButtonDisabled,\n      onSaveButtonClick,\n    } = this.state;\n    return (\n      <div>\n        <h1>Tryunfo</h1>\n        <Form\n          cardName={ cardName }\n          cardDescription={ cardDescription }\n          cardAttr1={ cardAttr1 }\n          cardAttr2={ cardAttr2 }\n          cardAttr3={ cardAttr3 }\n          cardImage={ cardImage }\n          cardRare={ cardRare }\n          cardTrunfo={ cardTrunfo }\n          /*  hasTrunfo={ hasTrunfo } */\n          isSaveButtonDisabled={ isSaveButtonDisabled }\n          onSaveButtonClick={ this.onSaveButtonClick }\n          onInputChange={ this.onInputChange }\n\n        />\n\n        <div className=\"card\">\n          <Card\n            cardName={ cardName }\n            cardDescription={ cardDescription }\n            cardAttr1={ cardAttr1 }\n            cardAttr2={ cardAttr2 }\n            cardAttr3={ cardAttr3 }\n            cardImage={ cardImage }\n            cardRare={ cardRare }\n            cardTrunfo={ cardTrunfo }\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}